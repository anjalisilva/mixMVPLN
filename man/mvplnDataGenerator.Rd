% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvplnDataGenerator.R
\name{mvplnDataGenerator}
\alias{mvplnDataGenerator}
\title{Generating Data Using Mixtures of MVPLN}
\usage{
mvplnDataGenerator(
  nOccasions,
  nResponses,
  nUnits,
  mixingProportions,
  matrixMean,
  phi,
  omega
)
}
\arguments{
\item{nOccasions}{A positive integer indicating the number of occassions.
A matrix Y_j has size r x p, and the dataset will have 'j' such
matrices with j = 1,...,n. Here, Y_j matrix is said to contain k ∈ {1,...,p}
responses/variables over i ∈ {1,...,r} occasions.}

\item{nResponses}{A positive integer indicating the number of responses/variables.
A matrix Y_j has size r x p, and the dataset will have 'j' such
matrices with j = 1,...,n. Here, Y_j matrix is said to contain k ∈ {1,...,p}
responses/variables over i ∈ {1,...,r} occasions.}

\item{nUnits}{A positive integer indicating the number of units. A
matrix Y_j has size r x p, and the dataset will have 'j' such
matrices with j = 1,...,n.}

\item{mixingProportions}{A numeric vector that length equal to the number of total
components, indicating the proportion of each component. Vector content should
sum to 1.}

\item{matrixMean}{A matrix of size r x p for each component/cluster, giving the
matrix of means (M). All matrices should be combined via rbind. See example.}

\item{phi}{A matrix of size r x r, which is the covariance matrix containing the
variances and covariances between 'r' occasions, for each component/cluster.
All matrices should be combined via rbind. See example.}

\item{omega}{A matrix of size p x p, which is the covariance matrix containing the
variance and covariances of 'p' responses/variables, for each component/cluster.
All matrices should be combined via rbind. See example.}
}
\value{
Returns an S3 object of class mvplnDataGenerator with results.
\itemize{
  \item dataset - Simulated dataset with 'n' matrices, each matrix with
        dimension r x p, where 'r' is the number of occasions and 'p' is
        the number of responses/variables.
  \item truemembership - A numeric vector indicating the membership of
        each observation.
  \item units - A positive integer indicating the number of units used for
        simulating the data.
  \item occassions - A positive integer indicating the number of occassions
        used for simulating the data.
  \item variables - A positive integer indicating the number of
        responses/variables used for simulating the data.
  \item mixingProportions - A numeric vector indicating the mixing
     proportion of each component.
  \item means - Matrix of mean used for simulating the data.
  \item phi - Covariance matrix containing the variances and covariances
        between 'r' occasions used for simulating the data.
  \item psi - Covariance matrix containing the variance and covariances
        of 'p' responses/variables used for simulating the data.
}
}
\description{
This function simulates data from a mixture of MVPLN model. Each
dataset will have 'n' random matrices or units, each matrix with
dimension r x p, where 'r' is the number of occasions and 'p' is
the number of responses/variables.
}
\examples{
# Generating simulated data
set.seed(1234)
true_G <- 2 # number of total G
true_r <- 2 # number of total occasions
true_p <- 3 # number of total responses
true_n <- 100 # number of total units

# M is a r x p matrix
true_M1 <- matrix(rep(6, (true_r*true_p)),
                  ncol = true_p, nrow = true_r, byrow = TRUE)
true_M2 <- matrix(rep(1, (true_r*true_p)),
                  ncol = true_p, nrow = true_r, byrow = TRUE)
true_M_all <- rbind(true_M1, true_M2)

# Phi is a r x r matrix
library(clusterGeneration)
# Covariance matrix containing variances and covariances between r occasions
true_Phi1 <- clusterGeneration::genPositiveDefMat(covMethod = "unifcorrmat",
                                                  dim=true_r,
                                                  rangeVar = c(1, 1.7))$Sigma
true_Phi1[1, 1] <- 1 # for identifiability issues
true_Phi2 <- clusterGeneration::genPositiveDefMat(covMethod = "unifcorrmat",
                                                  dim = true_r,
                                                  rangeVar = c(0.7, 0.7))$Sigma
true_Phi2[1, 1] <- 1 # for identifiability issues
true_Phi_all <- rbind(true_Phi1, true_Phi2)

# Omega is a p x p matrix
# Covariance matrix containing variance and covariances of p responses/variables
true_Omega1 <- clusterGeneration::genPositiveDefMat(covMethod = "unifcorrmat",
                                                    dim = true_p,
                                                    rangeVar = c(1, 1.7))$Sigma
true_Omega2 <- clusterGeneration::genPositiveDefMat(covMethod = "unifcorrmat",
                                                    dim = true_p,
true_Omega_all <- rbind(true_Omega1, true_Omega2)


sampleData <- mixMVPLN::mvplnDataGenerator(nOccasions = true_r,
                                           nResponses = true_p,
                                           nUnits = true_n,
                                           mixingProportions = c(0.79, 0.21),
                                           matrixMean = true_M_all,
                                           phi = true_Phi_all,
                                           omega = true_Omega_all)

}
\references{
Silva, A. et al. (2018). Finite Mixtures of Matrix Variate Poisson-Log Normal Distributions
for Three-Way Count Data. \href{https://arxiv.org/abs/1807.08380}{arXiv preprint arXiv:1807.08380}.

Aitchison, J. and C. H. Ho (1989). The multivariate Poisson-log normal distribution.
\emph{Biometrika} 76. \href{https://www.jstor.org/stable/2336624?seq=1}{Link}.

Silva, A. et al. (2019). A multivariate Poisson-log normal mixture model
for clustering transcriptome sequencing data. \emph{BMC Bioinformatics} 20.
\href{https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-2916-0}{Link}.
}
\author{
Anjali Silva, \email{anjali.silva@uhnresearch.ca}
}
